    Вопросы для проработки:

    1. '__new__(cls, [...) vs __init__(self, [...) разница'
       __new__ – это первый шаг создания экземпляра. Он вызывается первым и отвечает за возврат нового экземпляра вашего класса.
       __init__ ничего не возвращает,он отвечает только за инициализацию экземпляра после его создания. Это конструктор

    2. isinstance
       Возвращает флаг, указывающий на то, является ли указанный объект экземпляром указанного класса (классов).
	isinstance(obj, classinfo) -> bool


    3. Что такое @classmethod, @staticmethod, @property
       Метод класса: получает класс, а не экземпляр,можно переопределить дочерними классами, имеет доступ ко всем атрибутам класса
	Статический метод: экземпляр или класс не передается, его определение неизменяемо через 	наследование, это просто функция, называемая синтаксически как метод, но без доступа к объекту и 	его атрибутам

    4. Как создать класс без инструкции class
       type(имя класса, кортеж родительских классов, словарь атрибутов)
       D6 = type('D6',(),{})  # имя класса, кортеж родительских классов, словарь атрибутов

    5. Что такое атрибут '__slots__'? (https://pythonz.net/references/named/object.__slots__/)
                1. __slots__ позволяет снизить объём памяти, потребляемой экземплярами класса, ограничивая количество атрибутов ими поддерживаемых.
       По умолчанию классы используют словарь для хранения атрибутов — это позволяет модифицировать набор атрибутов объекта прямо в ходе исполнения программы. Однако такой подход оказывается затратным для объектов, набор атрибутов которых невелик и/или ограничен. Это становится особенно заметно, когда создаётся большое количество экземпляров.
	Поведение по умолчанию можно изменить, задав __slots__ при определении класса. В __slots__ могут быть перечислены атрибуты для значений которых требуется зарезервировать место (с точки зрения CPython в объекте класса резервируется место для массива указателей на Python-объекты). При этом ни __dict__, ни __weakref__ для экземпляров автоматически созданы не будут (даже если в качестве значения строки указать пустую строку).
В качестве значения __slots__ может быть указана строка, объект поддерживающий итерирование, или последовательность строк с именами атрибутов, использующихся экземплярами.
Слоты реализуются при помощи создания дескриптора для каждого из перечисленных атрибутов.

    6. Что такое порядок разрешения методов (Method Resolution Order — MRO) в Python
       __mro__ Содержит кортеж с родительскими типами, выстроенными в порядке разрешения методов.
       print(list.__mro__)  # (list, object)

    7. Методы с нижним подчеркиванием __
    8. Что делают методы '__getattr_ и _getattribute__ getattr()'
    9. разница между “is” и “==”
    10. аннотация @dataclass
    11. разница между одинарным '_' и двойным '__' подчеркиванием
    12. реализации принципов ооп в питоне